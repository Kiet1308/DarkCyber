print("Quee")
local Character
while not s and Character~=nil do 
local k,v = pcall(function() 
Character = game:GetService("Players").LocalPlayer.Character
end)
s=k
end

_G.Team = 0
RootPart = game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart")
local s = false

LocalPlayer = game:GetService("Players").LocalPlayer

wait(5)
if _G.Team == 0 then
    local MyUiButton = game.Players.LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.ViewportFrame.TextButton

    for i,v in pairs(getconnections(MyUiButton.MouseButton1Click)) do
    v.Function()
    end
elseif _G.Team == 1 then
    local MyUiButton = game.Players.LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.ViewportFrame.TextButton

    for i,v in pairs(getconnections(MyUiButton.MouseButton1Click)) do
    v.Function()
    end
end

wait(2)
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
 
local File =
    pcall(
    function()
        AllIDs = game:GetService("HttpService"):JSONDecode(readfile("NotSameServers.json"))
    end
)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
end
function TPReturner()
    local Site
    if foundAnything == "" then
        Site =
            game.HttpService:JSONDecode(
            game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100")
        )
    else
        Site =
            game.HttpService:JSONDecode(
            game:HttpGet(
                "https://games.roblox.com/v1/games/" ..
                    PlaceID .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. foundAnything
            )
        )
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0
    for i, v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _, Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile =
                            pcall(
                            function()
                                delfile("NotSameServers.json")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end
                        )
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(
                    function()
                        writefile("NotSameServers.json", game:GetService("HttpService"):JSONEncode(AllIDs))
                        wait()
                        game:GetService("TeleportService"):TeleportToPlaceInstance(
                            PlaceID,
                            ID,
                            game.Players.LocalPlayer
                        )
                    end
                )
                wait(4)
            end
        end
    end
end


function Teleport()
    while wait() do
        pcall(
            function()
                TPReturner()
                if foundAnything ~= "" then
                    TPReturner()
                end
            end
        )
    end
end
local fui = false
for k,v in pairs(game.Workspace:GetChildren()) do 
        if string.match(v.Name,"Fruit") then 
                if v:IsA("Tool") then
                    if string.match(v.Name,"Quake") then
                    fui=true
                    
                    end
                    firetouchinterest(game.Players.LocalPlayer.Character.LeftFoot,v.Handle,0)
                    end
            end
    end

if not fui then
    syn.queue_on_teleport(game:HttpGet("https://raw.githubusercontent.com/Kiet1308/DarkCyber/main/hopbf"))
Teleport()

end
